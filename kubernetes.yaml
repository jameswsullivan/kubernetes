# Create kubectl roles:

# Role:
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: kubectl-role
  namespace: <namespace>
rules:
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["apps"]
    resources: ["deployments"]
    verbs: ["get", "list", "watch", "update", "patch"]

# RoleBinding:
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: kubectl-role-binding
  namespace: <namespace>
subjects:
  - kind: ServiceAccount
    name: kubectl-sa
    namespace: <namespace>
roleRef:
  kind: Role
  name: kubectl-role
  apiGroup: rbac.authorization.k8s.io


# ClusterRole:
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubectl-cluster-role
rules:
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["apps"]
    resources: ["deployments"]
    verbs: ["get", "list", "watch", "update", "patch"]


# ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kubectl-cluster-role-binding
subjects:
  - kind: ServiceAccount
    name: kubectl-sa
    namespace: <namespace>
roleRef:
  kind: ClusterRole
  name: kubectl-cluster-role
  apiGroup: rbac.authorization.k8s.io

